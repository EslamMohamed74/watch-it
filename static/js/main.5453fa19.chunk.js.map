{"version":3,"sources":["Components/SearchBar.js","Api/youtube.js","Components/VideoItem.js","Components/VideoList.js","Components/VideoDetail.js","Components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","e","setState","target","value","onFormSubmit","preventDefault","props","onTermSubmit","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","video","onVideoSelect","onClick","src","snippet","thumbnails","medium","url","alt","title","VideoList","videos","renderList","map","id","videoId","VideoDetail","videoSrc","description","App","selectedVideo","a","youtube","get","q","response","data","items","style","marginTop","ReactDom","render","document","querySelector"],"mappings":"iQAiCeA,E,2MA9BXC,MAAQ,CACJC,KAAM,I,EAEVC,cAAgB,SAAAC,GACZ,EAAKC,SAAS,CACVH,KAAME,EAAEE,OAAOC,S,EAGvBC,aAAe,SAAAJ,GACXA,EAAEK,iBACF,EAAKC,MAAMC,aAAa,EAAKV,MAAMC,O,wEAGnC,OACI,yBAAKU,UAAU,yBACX,0BAAMC,SAAUC,KAAKN,aAAcI,UAAU,WACzC,yBAAKA,UAAU,SACX,+CACA,2BACIG,KAAK,OACLR,MAAOO,KAAKb,MAAMC,KAClBc,SAAUF,KAAKX,uB,GAtBnBc,IAAMC,W,QCCfC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,yCACTC,OAAQ,CACJC,KAAM,UACNC,WAAY,EACZC,IAPI,6CCsBGC,G,MApBG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACxB,OACI,yBACIC,QAAS,WACLD,EAAcD,IAElBf,UAAU,mBAEV,yBACIA,UAAU,WACVkB,IAAKH,EAAMI,QAAQC,WAAWC,OAAOC,IACrCC,IAAKR,EAAMI,QAAQK,QAEvB,yBAAKxB,UAAU,WACX,yBAAKA,UAAU,UAAUe,EAAMI,QAAQK,WCDxCC,EAbG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACnBW,EAAaD,EAAOE,KAAI,SAAAb,GAC1B,OACI,kBAAC,EAAD,CACIF,IAAKE,EAAMc,GAAGC,QACdd,cAAeA,EACfD,MAAOA,OAInB,OAAO,yBAAKf,UAAU,2BAA2B2B,ICYtCI,EAvBK,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MACnB,IAAKA,EACD,OACI,yBAAKf,UAAU,cACX,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,wBAAf,aAKhB,IAAMgC,EAAQ,wCAAoCjB,EAAMc,GAAGC,SAC3D,OACI,6BACI,yBAAK9B,UAAU,YACX,4BAAQwB,MAAM,eAAeN,IAAKc,KAEtC,yBAAKhC,UAAU,cACX,yBAAKA,UAAU,aAAae,EAAMI,QAAQK,OAC1C,2BAAIT,EAAMI,QAAQc,gBCiCnBC,E,2MA9CX7C,MAAQ,CACJqC,OAAQ,GACRS,cAAe,M,EAKnBpC,a,uCAAe,WAAMT,GAAN,eAAA8C,EAAA,sEACYC,EAAQC,IAAI,UAAW,CAC1C5B,OAAQ,CACJ6B,EAAGjD,KAHA,OACLkD,EADK,OAMX,EAAK/C,SAAS,CACViC,OAAQc,EAASC,KAAKC,MACtBP,cAAeK,EAASC,KAAKC,MAAM,KAR5B,2C,wDAYf1B,cAAgB,SAAAD,GACZ,EAAKtB,SAAS,CACV0C,cAAepB,K,mFAhBnBb,KAAKH,iB,+BAqBL,OACI,yBAAKC,UAAU,eAAe2C,MAAO,CAAEC,UAAW,SAC9C,kBAAC,EAAD,CAAW7C,aAAcG,KAAKH,eAC9B,yBAAKC,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,sBACX,kBAAC,EAAD,CAAae,MAAOb,KAAKb,MAAM8C,iBAEnC,yBAAKnC,UAAU,oBACX,kBAAC,EAAD,CACIgB,cAAed,KAAKc,cACpBU,OAAQxB,KAAKb,MAAMqC,iB,GAtCjCrB,IAAMC,WCFxBuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.5453fa19.chunk.js","sourcesContent":["import React from \"react\";\n\nclass SearchBar extends React.Component {\n    state = {\n        term: \"\"\n    };\n    onInputChange = e => {\n        this.setState({\n            term: e.target.value\n        });\n    };\n    onFormSubmit = e => {\n        e.preventDefault();\n        this.props.onTermSubmit(this.state.term);\n    };\n    render() {\n        return (\n            <div className=\"search-bar ui segment\">\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\n                    <div className=\"field\">\n                        <label>Video Search</label>\n                        <input\n                            type=\"text\"\n                            value={this.state.term}\n                            onChange={this.onInputChange}\n                        />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;\n","import axios from \"axios\";\nconst KEY = \"AIzaSyB3jPqmytQ8PhSo4pGjDyv5qpYXumoZfqo\";\n\nexport default axios.create({\n    baseURL: \"https://www.googleapis.com/youtube/v3/\",\n    params: {\n        part: \"snippet\",\n        maxResults: 5,\n        key: KEY\n    }\n});\n","import React from \"react\";\nimport \"./VideoItem.css\";\n\nconst VideoItem = ({ video, onVideoSelect }) => {\n    return (\n        <div\n            onClick={() => {\n                onVideoSelect(video);\n            }}\n            className=\"item video-item\"\n        >\n            <img\n                className=\"ui image\"\n                src={video.snippet.thumbnails.medium.url}\n                alt={video.snippet.title}\n            />\n            <div className=\"content\">\n                <div className=\"header\">{video.snippet.title}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default VideoItem;\n","import React from \"react\";\nimport VideoItem from \"./VideoItem\";\n\nconst VideoList = ({ videos, onVideoSelect }) => {\n    const renderList = videos.map(video => {\n        return (\n            <VideoItem\n                key={video.id.videoId}\n                onVideoSelect={onVideoSelect}\n                video={video}\n            />\n        );\n    });\n    return <div className=\"ui relaxed divided list\">{renderList}</div>;\n};\n\nexport default VideoList;\n","import React from \"react\";\n\nconst VideoDetail = ({ video }) => {\n    if (!video) {\n        return (\n            <div className=\"ui segment\">\n                <div className=\"ui active inverted dimmer\">\n                    <div className=\"ui large text loader\">Loading</div>\n                </div>\n            </div>\n        );\n    }\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\n    return (\n        <div>\n            <div className=\"ui embed\">\n                <iframe title=\"video player\" src={videoSrc} />\n            </div>\n            <div className=\"ui segment\">\n                <div className=\"ui header\">{video.snippet.title}</div>\n                <p>{video.snippet.description}</p>\n            </div>\n        </div>\n    );\n};\nexport default VideoDetail;\n","import React from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport youtube from \"../Api/youtube\";\nimport VideoList from \"./VideoList\";\nimport VideoDetail from \"./VideoDetail\";\n\nclass App extends React.Component {\n    state = {\n        videos: [],\n        selectedVideo: null\n    };\n    componentDidMount() {\n        this.onTermSubmit();\n    }\n    onTermSubmit = async term => {\n        const response = await youtube.get(\"/search\", {\n            params: {\n                q: term\n            }\n        });\n        this.setState({\n            videos: response.data.items,\n            selectedVideo: response.data.items[0]\n        });\n    };\n\n    onVideoSelect = video => {\n        this.setState({\n            selectedVideo: video\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\n                <SearchBar onTermSubmit={this.onTermSubmit} />\n                <div className=\"ui grid\">\n                    <div className=\"ui row\">\n                        <div className=\"eleven wide column\">\n                            <VideoDetail video={this.state.selectedVideo} />\n                        </div>\n                        <div className=\"five wide column\">\n                            <VideoList\n                                onVideoSelect={this.onVideoSelect}\n                                videos={this.state.videos}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDom.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}